const file = require('../controllers/file')
const search = require('../controllers/search')
const user = require('../controllers/user')
const issue = require('../controllers/issue')
const acadamy = require('../controllers/acadamy')

const auth = require('../middlewares/auth')

const router = require('koa-router')()

router.post('/userbyname', user.findUserByName)
router.post('/userbyid', user.findUserById)
router.post('/register', user.register)
router.post('/login', user.login)
router.post('/user', auth.auth, user.updateUser)
router.get('/user', user.findUserById)

router.get('/file', file.getFile)
router.get('/getfilebyacadamy',file.getFileByAcadamy)
router.get('/getfilebyauthor',file.getFileByAuthor)
router.get('/deletefile', auth.auth, file.deleFile)
router.get('/download', file.downloadFile)
router.post('/getfilebyblurry',file.findFileByBlurry)
router.post('/file', auth.auth, file.addFile)
router.post('/filesbyids', file.getFileByids)
router.post('/file-info', auth.auth, file.setInfo)
router.post('/fileupdate', auth.auth, file.updateFile)
router.post('/collect', auth.auth, file.collectFile)
router.post('/uncollect', auth.auth, file.uncollectFile)


router.get('/acadamylist', acadamy.getAcadamyList)
router.post('/acadamy', auth.auth, acadamy.addAcadamy)
router.get('/deleteacadamy',acadamy.deleteAcadamy)

router.get('/issue', issue.getIssue)
router.post('/addIssue', auth.auth, issue.addIssue)
router.get('/deleteIssue', auth.auth, issue.deleIssue)
router.post('/updateIssue', auth.auth, issue.updateIssue)
router.get('/getissuebyauthor', auth.auth, issue.findIssueByUser)
router.get('/findIssueBlurry', issue.findIssueByBlurry)
router.get('/getIssueByid', issue.getIssueByid)
router.post('/getIssueByids', issue.getIssuesByids)
router.post('/getAnswerByids', issue.getAnswersByids)
router.post('/publishAnswer', auth.auth, issue.publishAnswer)
router.get('/deleteAnswer', auth.auth, issue.deleteAnswer)
router.get('/watchIssue', auth.auth, issue.watchIssue)
router.get('/approveIssue', auth.auth, issue.approveAnswer)
router.get('/againstIssue', auth.auth, issue.againstAnswer)
router.get('/cancelWatchIssue', auth.auth, issue.cancelWatchIssue)
router.get('/cancelApproveIssue', auth.auth, issue.cancelApproveAnswer)
router.get('/cancelAgainstIssue', auth.auth, issue.cancelAgainstAnswer)
router.post('/addIssueImage', auth.auth, issue.addIssueImage)

module.exports = router