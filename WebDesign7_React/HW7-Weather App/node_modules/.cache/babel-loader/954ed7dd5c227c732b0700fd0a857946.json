{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jumin\\\\Desktop\\\\HW7-Weather App\\\\src\\\\components\\\\DayForecastList.js\";\nimport React from 'react';\nimport DayForecast from './DayForecast';\nimport HourForecastList from './HourForecastList';\n\nconst DayForecastList = ({\n  list,\n  selected,\n  onClick,\n  city\n}) => {\n  const result = list.map(day => {\n    const min = day.forecast.reduce((accumulator, fc) => accumulator < fc.temperature ? accumulator : fc.temperature, 100);\n    const max = day.forecast.reduce((accumulator, fc) => accumulator > fc.temperature ? accumulator : fc.temperature, -100);\n    return React.createElement(DayForecast, {\n      key: day.weekday,\n      weekday: day.weekday,\n      max: max,\n      min: min,\n      onClick: onClick,\n      selected: day.weekday === selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  });\n  const selectedForecast = selected ? list.find(item => item.weekday === selected).forecast : null;\n  return React.createElement(\"div\", {\n    className: \"forecast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, city), React.createElement(\"div\", {\n    className: \"forecastDays\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, result), selected && React.createElement(\"div\", {\n    className: \"hours-graph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(HourForecastList, {\n    list: selectedForecast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default DayForecastList;","map":{"version":3,"sources":["C:/Users/jumin/Desktop/HW7-Weather App/src/components/DayForecastList.js"],"names":["React","DayForecast","HourForecastList","DayForecastList","list","selected","onClick","city","result","map","day","min","forecast","reduce","accumulator","fc","temperature","max","weekday","selectedForecast","find","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAAuC;AAC7D,QAAMC,MAAM,GAAGJ,IAAI,CAACK,GAAL,CAASC,GAAG,IAAI;AAC7B,UAAMC,GAAG,GAAGD,GAAG,CAACE,QAAJ,CAAaC,MAAb,CACV,CAACC,WAAD,EAAcC,EAAd,KACED,WAAW,GAAGC,EAAE,CAACC,WAAjB,GAA+BF,WAA/B,GAA6CC,EAAE,CAACC,WAFxC,EAGV,GAHU,CAAZ;AAKA,UAAMC,GAAG,GAAGP,GAAG,CAACE,QAAJ,CAAaC,MAAb,CACV,CAACC,WAAD,EAAcC,EAAd,KACED,WAAW,GAAGC,EAAE,CAACC,WAAjB,GAA+BF,WAA/B,GAA6CC,EAAE,CAACC,WAFxC,EAGV,CAAC,GAHS,CAAZ;AAKA,WACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEN,GAAG,CAACQ,OADX;AAEE,MAAA,OAAO,EAAER,GAAG,CAACQ,OAFf;AAGE,MAAA,GAAG,EAAED,GAHP;AAIE,MAAA,GAAG,EAAEN,GAJP;AAKE,MAAA,OAAO,EAAEL,OALX;AAME,MAAA,QAAQ,EAAEI,GAAG,CAACQ,OAAJ,KAAgBb,QAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GArBc,CAAf;AAsBA,QAAMc,gBAAgB,GAAGd,QAAQ,GAC7BD,IAAI,CAACgB,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACH,OAAL,KAAiBb,QAAnC,EAA6CO,QADhB,GAE7B,IAFJ;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAL,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,MAA/B,CAFF,EAGGH,QAAQ,IACP;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEc,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,CADF;AAgBD,CA1CD;;AA4CA,eAAehB,eAAf","sourcesContent":["import React from 'react';\r\nimport DayForecast from './DayForecast';\r\nimport HourForecastList from './HourForecastList';\r\n\r\n\r\nconst DayForecastList = ({ list, selected, onClick, city }) => {\r\n  const result = list.map(day => {\r\n    const min = day.forecast.reduce(\r\n      (accumulator, fc) =>\r\n        accumulator < fc.temperature ? accumulator : fc.temperature,\r\n      100,\r\n    );\r\n    const max = day.forecast.reduce(\r\n      (accumulator, fc) =>\r\n        accumulator > fc.temperature ? accumulator : fc.temperature,\r\n      -100,\r\n    );\r\n    return (\r\n      <DayForecast\r\n        key={day.weekday}\r\n        weekday={day.weekday}\r\n        max={max}\r\n        min={min}\r\n        onClick={onClick}\r\n        selected={day.weekday === selected}\r\n      />\r\n    );\r\n  });\r\n  const selectedForecast = selected\r\n    ? list.find(item => item.weekday === selected).forecast\r\n    : null;\r\n  return (\r\n    <div className=\"forecast\">\r\n      <h1>{city}</h1>\r\n      <div className=\"forecastDays\">{result}</div>\r\n      {selected && (\r\n        <div className=\"hours-graph\">\r\n          <HourForecastList list={selectedForecast} />\r\n          {/* <WeatherGraph\r\n            data={selectedForecast}\r\n            width=\"800\"\r\n            height=\"500\"\r\n          /> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayForecastList;"]},"metadata":{},"sourceType":"module"}